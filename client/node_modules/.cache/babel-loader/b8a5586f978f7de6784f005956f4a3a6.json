{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emanoyela\\\\Downloads\\\\John Abbott Full Stack Dev program\\\\12-Web Development II\\\\Project v2\\\\greggit\\\\client\\\\src\\\\pages\\\\Registration.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  _s();\n\n  let navigate = useNavigate();\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().min(3).max(15).required(\"Username is required...\"),\n    password: Yup.string().min(4).max(20).required(\"Password is required...\")\n  });\n\n  const onSubmit = data => {\n    //Todo check if user already exists\n    axios.post(\"http://localhost:3001/auth\", data).then(response => {\n      console.log(data);\n\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        alert(response.data);\n        navigate(\"/\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"username\",\n          placeholder: \"(Ex. John123...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          id: \"inputCreatePost\",\n          name: \"password\",\n          placeholder: \"Password...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registration, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","Registration","navigate","initialValues","username","password","validationSchema","object","shape","string","min","max","required","onSubmit","data","post","then","response","console","log","error","alert"],"sources":["C:/Users/Emanoyela/Downloads/John Abbott Full Stack Dev program/12-Web Development II/Project v2/greggit/client/src/pages/Registration.js"],"sourcesContent":["import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction Registration() {\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string().min(3).max(15).required(\"Username is required...\"),\r\n        password: Yup.string().min(4).max(20).required(\"Password is required...\"),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        //Todo check if user already exists\r\n        axios.post(\"http://localhost:3001/auth\", data).then((response) => {\r\n            console.log(data);\r\n            if(response.data.error){\r\n                alert(response.data.error);\r\n            }\r\n            else{\r\n                alert(response.data);\r\n                navigate(\"/\");\r\n            }\r\n            \r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className='registerPage'>\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                <Form className='formContainer'>\r\n                    <label>Username:</label>\r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <Field id=\"inputCreatePost\" name=\"username\" placeholder=\"(Ex. John123...)\"/>\r\n\r\n                    <label>Password:</label>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <Field type=\"password\" id=\"inputCreatePost\" name=\"password\" placeholder=\"Password...\"/>\r\n\r\n                    <button type=\"submit\">Register</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,QAAgD,QAAhD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EAEpB,IAAIC,QAAQ,GAAGF,WAAW,EAA1B;EAEA,MAAMG,aAAa,GAAG;IAClBC,QAAQ,EAAE,EADQ;IAElBC,QAAQ,EAAE;EAFQ,CAAtB;EAKA,MAAMC,gBAAgB,GAAGR,GAAG,CAACS,MAAJ,GAAaC,KAAb,CAAmB;IACxCJ,QAAQ,EAAEN,GAAG,CAACW,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,CAAqC,yBAArC,CAD8B;IAExCP,QAAQ,EAAEP,GAAG,CAACW,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BC,QAA5B,CAAqC,yBAArC;EAF8B,CAAnB,CAAzB;;EAKA,MAAMC,QAAQ,GAAIC,IAAD,IAAU;IACvB;IACAf,KAAK,CAACgB,IAAN,CAAW,4BAAX,EAAyCD,IAAzC,EAA+CE,IAA/C,CAAqDC,QAAD,IAAc;MAC9DC,OAAO,CAACC,GAAR,CAAYL,IAAZ;;MACA,IAAGG,QAAQ,CAACH,IAAT,CAAcM,KAAjB,EAAuB;QACnBC,KAAK,CAACJ,QAAQ,CAACH,IAAT,CAAcM,KAAf,CAAL;MACH,CAFD,MAGI;QACAC,KAAK,CAACJ,QAAQ,CAACH,IAAV,CAAL;QACAZ,QAAQ,CAAC,GAAD,CAAR;MACH;IAEJ,CAVD;EAWH,CAbD;;EAeA,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA,uBACI,QAAC,MAAD;MAAQ,aAAa,EAAEC,aAAvB;MAAsC,QAAQ,EAAEU,QAAhD;MAA0D,gBAAgB,EAAEP,gBAA5E;MAAA,uBACI,QAAC,IAAD;QAAM,SAAS,EAAC,eAAhB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,YAAD;UAAc,IAAI,EAAC,UAAnB;UAA8B,SAAS,EAAC;QAAxC;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,KAAD;UAAO,EAAE,EAAC,iBAAV;UAA4B,IAAI,EAAC,UAAjC;UAA4C,WAAW,EAAC;QAAxD;UAAA;UAAA;UAAA;QAAA,QAHJ,eAKI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ,eAMI,QAAC,YAAD;UAAc,IAAI,EAAC,UAAnB;UAA8B,SAAS,EAAC;QAAxC;UAAA;UAAA;UAAA;QAAA,QANJ,eAOI,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,EAAE,EAAC,iBAA1B;UAA4C,IAAI,EAAC,UAAjD;UAA4D,WAAW,EAAC;QAAxE;UAAA;UAAA;UAAA;QAAA,QAPJ,eASI;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GA9CQL,Y;UAEUD,W;;;KAFVC,Y;AAgDT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}