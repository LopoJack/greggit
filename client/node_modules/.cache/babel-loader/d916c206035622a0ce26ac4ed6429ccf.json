{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emanoyela\\\\Downloads\\\\John Abbott Full Stack Dev program\\\\12-Web Development II\\\\Project v2\\\\greggit\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost() {\n  _s();\n\n  let navigate = useNavigate();\n  const initialValues = {\n    title: \"\",\n    body: \"\",\n    author_id: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    //create an object with the same fields as DB\n    title: Yup.string().required(\"You must input a title!\"),\n    //these fields will contain the validation and you can include an error message\n    body: Yup.string().required(\"Post body cannot be empty...\")\n  });\n\n  const onSubmit = data => {\n    axios.post(\"http://localhost:3001/posts\", data).then(response => {\n      //console.log(\"It worked!!!\");\n      navigate(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"title\",\n          placeholder: \"(Ex. Title...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"body\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          id: \"inputCreatePost\",\n          name: \"body\",\n          placeholder: \"start typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePost, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","CreatePost","navigate","initialValues","title","body","author_id","validationSchema","object","shape","string","required","onSubmit","data","post","then","response"],"sources":["C:/Users/Emanoyela/Downloads/John Abbott Full Stack Dev program/12-Web Development II/Project v2/greggit/client/src/pages/CreatePost.js"],"sourcesContent":["import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction CreatePost() {\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        title: \"\",\r\n        body: \"\",\r\n        author_id: \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\t\t\t\t//create an object with the same fields as DB\r\n        title: Yup.string().required(\"You must input a title!\"),\t\t//these fields will contain the validation and you can include an error message\r\n        body: Yup.string().required(\"Post body cannot be empty...\"),\r\n    });\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post(\"http://localhost:3001/posts\", data).then((response) => {\r\n            //console.log(\"It worked!!!\");\r\n            navigate(\"/\");\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className='createPostPage'>\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema} >\r\n                <Form className='formContainer'>\r\n                    <label>Title</label>\r\n                    <ErrorMessage name=\"title\" component=\"span\" />\r\n                    <Field id=\"inputCreatePost\" name=\"title\" placeholder=\"(Ex. Title...\"/>\r\n\r\n                    <label>Post</label>\r\n                    <ErrorMessage name=\"body\" component=\"span\" />\r\n                    <Field id=\"inputCreatePost\" name=\"body\" placeholder=\"start typing...\"/>\r\n\r\n                    <button type=\"submit\">Create Post</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\nexport default CreatePost;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,QAAgD,QAAhD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EAElB,IAAIC,QAAQ,GAAGF,WAAW,EAA1B;EAEA,MAAMG,aAAa,GAAG;IAClBC,KAAK,EAAE,EADW;IAElBC,IAAI,EAAE,EAFY;IAGlBC,SAAS,EAAE;EAHO,CAAtB;EAMA,MAAMC,gBAAgB,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;IAAK;IAC7CL,KAAK,EAAEN,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CADiC;IACkB;IAC1DN,IAAI,EAAEP,GAAG,CAACY,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB;EAFkC,CAAnB,CAAzB;;EAKA,MAAMC,QAAQ,GAAIC,IAAD,IAAU;IACvBd,KAAK,CAACe,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,EAAgDE,IAAhD,CAAsDC,QAAD,IAAc;MAC/D;MACAd,QAAQ,CAAC,GAAD,CAAR;IACH,CAHD;EAIH,CALD;;EAOA,oBACI;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI,QAAC,MAAD;MAAQ,aAAa,EAAEC,aAAvB;MAAsC,QAAQ,EAAES,QAAhD;MAA0D,gBAAgB,EAAEL,gBAA5E;MAAA,uBACI,QAAC,IAAD;QAAM,SAAS,EAAC,eAAhB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,YAAD;UAAc,IAAI,EAAC,OAAnB;UAA2B,SAAS,EAAC;QAArC;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,KAAD;UAAO,EAAE,EAAC,iBAAV;UAA4B,IAAI,EAAC,OAAjC;UAAyC,WAAW,EAAC;QAArD;UAAA;UAAA;UAAA;QAAA,QAHJ,eAKI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ,eAMI,QAAC,YAAD;UAAc,IAAI,EAAC,MAAnB;UAA0B,SAAS,EAAC;QAApC;UAAA;UAAA;UAAA;QAAA,QANJ,eAOI,QAAC,KAAD;UAAO,EAAE,EAAC,iBAAV;UAA4B,IAAI,EAAC,MAAjC;UAAwC,WAAW,EAAC;QAApD;UAAA;UAAA;UAAA;QAAA,QAPJ,eASI;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GAvCQN,U;UAEUD,W;;;KAFVC,U;AAwCT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}